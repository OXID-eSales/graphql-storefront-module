name: SonarTmp

on:
  push:
    branches: [ sonarcloud ]

jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                php:
                    - "8.0"

        steps:
            - name: Checkout graphql-storefront
              uses: actions/checkout@v2

            - name: Add more memory as swap
              run: |
                  sudo fallocate -l 4G /swapfile
                  sudo chmod 600 /swapfile
                  sudo mkswap /swapfile
                  sudo swapon /swapfile
                  sudo swapon --show

            - name: Build docker
              run: |
                  cd /home/runner/work/
                  git clone --depth 1 https://github.com/OXID-eSales/docker-eshop-sdk.git
                  cd docker-eshop-sdk
                  make .env
                  sed "s/PHP_VERSION=.*/PHP_VERSION=${{ matrix.php }}/" -i .env
                  git clone -b b-7.0 https://github.com/OXID-eSales/oxideshop_ce.git data/oxideshop
                  mkdir data/oxideshop/debug
                  make permissions
                  docker-compose run -T --rm --no-deps --user oxid php composer update
                  make data/oxideshop/source/config.inc.php
                  docker-compose up -d php
                  sleep 10
                  mkdir $GITHUB_WORKSPACE/artifact
                  make reset-db

            - name: Prepare shop
              continue-on-error: true
              run: |
                  cd /home/runner/work/docker-eshop-sdk/data/oxideshop/
                  mkdir covs
                  cp -r $GITHUB_WORKSPACE graphql-storefront-module
                  sed -i "1s/^/php_flag display_errors off\nphp_value xdebug.max_nesting_level 1000\n\n/" source/.htaccess
                  docker-compose exec -T --user oxid php php vendor/bin/oe-eshop-unified_namespace_generator
                  docker-compose exec -T --user oxid php composer config repositories.grapqhl-storefront path ./graphql-storefront-module/
                  docker-compose exec -T --user oxid php composer require oxid-esales/graphql-storefront:*
                  docker-compose exec -T --user oxid php php bin/oe-console oe:module:install vendor/oxid-esales/graphql-base/
                  docker-compose exec -T --user oxid php php bin/oe-console oe:module:install vendor/oxid-esales/graphql-storefront/
                  docker-compose exec -T --user oxid php php bin/oe-console oe:module:activate oe_graphql_base
                  docker-compose exec -T --user oxid php php bin/oe-console oe:module:activate oe_graphql_storefront

            - name: Run Codeception tests
              continue-on-error: true
              run: |
                  cd /home/runner/work/docker-eshop-sdk/data/oxideshop/
                  docker-compose exec -T --user oxid php composer require codeception/c3 --dev
                  docker-compose exec -T --user oxid php composer require codeception/module-rest:*
                  docker-compose exec -T --user oxid php composer require codeception/module-phpbrowser --dev
                  sed -i 's/<?php/<?php\n\nrequire(__DIR__ . "\/..\/c3.php");/' source/bootstrap.php
                  docker-compose exec -T --user oxid -e MODULE_IDS=oe_graphql_base,oe_graphql_storefront -e RUN_TESTS_FOR_SHOP=0 -e RUN_TESTS_FOR_MODULES=0 -e ACTIVATE_ALL_MODULES=1 -e ADDITIONAL_TEST_PATHS='/var/www/oxideshop/vendor/oxid-esales/graphql-storefront/tests' -e STOREFRONT_COVERAGE=1 php vendor/bin/runtests-codeception --coverage-phpunit

            - name: Unit Tests
              continue-on-error: true
              run: |
                  cd /home/runner/work/docker-eshop-sdk/data/oxideshop/
                  mkdir $GITHUB_WORKSPACE/artifact/phpunit/
                  docker-compose exec -T --user oxid -e MODULE_IDS=oe_graphql_base,oe_graphql_storefront -e RUN_TESTS_FOR_SHOP=0 -e RUN_TESTS_FOR_MODULES=0 -e ACTIVATE_ALL_MODULES=1 -e ADDITIONAL_TEST_PATHS='/var/www/oxideshop/vendor/oxid-esales/graphql-storefront/tests' -e STOREFRONT_COVERAGE=1 php php vendor/bin/runtests --coverage-php=/var/www/oxideshop/covs/unit.cov AllTestsUnit

            - name: Collect and merge coverage reports
              continue-on-error: true
              run: |
                  cd /home/runner/work/docker-eshop-sdk/data/oxideshop/
                  ls -alh graphql-storefront-module/tests/Codeception/_output/
                  cp graphql-storefront-module/tests/Codeception/_output/coverage.serialized covs/codeception.cov
                  wget https://phar.phpunit.de/phpcov.phar
                  ls -alh covs/
                  docker-compose exec -T --user oxid php php phpcov.phar merge --clover covs/coverage.xml covs
                  sed -i 's/\/var\/www\/oxideshop\/graphql-storefront-module\///' covs/coverage.xml
                  cp covs/coverage.xml $GITHUB_WORKSPACE/artifact/

            - name: Archive code coverage results
              uses: actions/upload-artifact@v2
              with:
                  name: codeception-coverage-report
                  path: /home/runner/work/graphql-storefront-module/graphql-storefront-module/artifact/

            - name: SonarCloud Scan
              uses: sonarsource/sonarcloud-github-action@master
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
              with:
                  args: >
                      -Dsonar.organization=oxid-esales
                      -Dsonar.projectKey=OXID-eSales_graphql-storefront-module
                      -Dsonar.sources=src
                      -Dsonar.tests=tests
                      -Dsonar.sourceEncoding=UTF-8
                      -Dsonar.php.coverage.reportPaths=artifact/coverage.xml
                      -Dsonar.cpd.php.minimumTokens=10
                      -Dsonar.cpd.php.minimumLines=5
