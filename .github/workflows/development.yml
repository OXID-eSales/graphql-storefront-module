name: Development

on: [ push, pull_request ]

jobs:
    install_shop_with_module:
        strategy:
            matrix:
                include:
                    - php: '8.0'
                      mysql: '5.7'
                    - php: '8.1'
                      mysql: '8.0'
        runs-on: ubuntu-latest
        steps:
            - name: Clone testing environment
              run: git clone https://github.com/OXID-eSales/docker-eshop-sdk.git .

            - name: Clone the shop
              run: git clone --depth 1 https://github.com/OXID-eSales/oxideshop_ce.git --branch b-7.0.x --single-branch source

            - name: Cache current installation
              uses: actions/cache@v2
              with:
                  path: |
                      ./*
                  key: shopInstallation-${{ matrix.php }}-${{ github.sha }}

            - name: Prepare container configuration
              run: |
                  make setup
                  make addbasicservices
                  perl -pi\
                    -e "s#PHP_VERSION=.*#PHP_VERSION='${{ matrix.php }}'#g;"\
                    .env

                  perl -pi\
                      -e 's#display_errors =.*#display_errors = false#g;'\
                      -e 'print "xdebug.max_nesting_level=1000\nxdebug.mode=coverage\n\n";'\
                      -e 'print "error_reporting = E_ALL & ~E_DEPRECATED & ~E_NOTICE & ~E_WARNING\n"'\
                      containers/php/custom.ini

                  perl -pi\
                    -e 's#/var/www/#/var/www/source/#g;'\
                    containers/httpd/project.conf

            - name: Prepare shop configuration
              run: |
                  cp source/source/config.inc.php.dist source/source/config.inc.php
                  sed -i "1s+^+SetEnvIf Authorization "\(.*\)" HTTP_AUTHORIZATION=\$1\n\n+" source/source/.htaccess
                  sed -i -e 's/<dbHost>/mysql/'\
                         -e 's/<dbUser>/root/'\
                         -e 's/<dbName>/example/'\
                         -e 's/<dbPwd>/root/'\
                         -e 's/<dbPort>/3306/'\
                         -e 's/<sShopURL>/http:\/\/localhost.local\//'\
                         -e 's/<sShopDir>/\/var\/www\/source\//'\
                         -e 's/<sCompileDir>/\/var\/www\/source\/tmp\//'\
                      source/source/config.inc.php

            - name: Start containers
              run: |
                  make up
                  sleep 2

            - name: Checkout current module
              uses: actions/checkout@v2
              with:
                  path: source/test-module

            - name: Install module
              run: |
                  docker-compose exec -T \
                    php composer config repositories.oxid-esales/grapqhl-storefront \
                    --json '{"type":"path", "url":"./test-module", "options": {"symlink": true}}'
                  docker-compose exec -T \
                    php composer require oxid-esales/graphql-storefront:* --no-interaction --no-update

            - name: Install dependencies and reset shop
              run: |
                  docker-compose exec -T php composer update --no-interaction
                  docker-compose exec -T \
                    php bin/oe-console oe:database:reset --db-host=mysql --db-port=3306 \
                    --db-name=example --db-user=root --db-password=root --force

            - name: Stop containers
              run: |
                  docker-compose down
                  sleep 2

    styles:
        strategy:
            matrix:
                php: [ '8.0', '8.1' ]
        runs-on: ubuntu-latest
        steps:
            - name: Checkout current module
              uses: actions/checkout@v2
              with:
                  path: source/test-module

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php }}
                  coverage: xdebug
                  extensions: gd, zip

            - name: Install module dependencies
              id: dependencies
              working-directory: source/test-module
              run: composer install

            - name: Run phpcs
              id: phpcs
              if: always()
              working-directory: source/test-module
              run: composer phpcs

            - name: Run phpstan
              id: phpstan
              if: always()
              working-directory: source/test-module
              run: composer phpstan-report || composer phpstan

            - name: Run phpmd
              id: phpmd
              continue-on-error: true
              if: always()
              working-directory: source/test-module
              run: composer phpmd-report || composer phpmd

            - name: Deptrac Analyzer
              id: deptrac
              if: always()
              working-directory: source/test-module
              run: composer deptrac

#    unit_tests:
#        strategy:
#            matrix:
#                php: [ '8.0' ]
#        needs: [ install_shop_with_module ]
#        runs-on: ubuntu-latest
#        steps:
#            - name: Load current installation from cache
#              uses: actions/cache@v2
#              with:
#                  path: |
#                      ./*
#                  key: shopInstallation-${{ matrix.php }}-${{ github.sha }}
#                  restore-keys: |
#                      shopInstallation-${{ matrix.php }}-${{ github.sha }}
#
#            - name: Start containers
#              run: |
#                  make up
#                  sleep 2
#
#            - name: Activate module
#              run: |
#                  docker-compose exec -T php bin/oe-console oe:module:activate oe_graphql_base
#                  docker-compose exec -T php bin/oe-console oe:module:activate oe_graphql_storefront
#
#            - name: Run tests
#              run: |
#                  docker-compose exec -T \
#                    -e XDEBUG_MODE=coverage \
#                    php php vendor/bin/phpunit \
#                      -c /var/www/vendor/oxid-esales/graphql-storefront/tests/phpunit.xml \
#                      --coverage-html=Coverage \
#                      --coverage-clover=/var/www/coverage.xml \
#                      --coverage-text \
#                      --log-junit=/var/www/phpunit.xml \
#                      /var/www/vendor/oxid-esales/graphql-storefront/tests/

    codeception_tests:
        strategy:
            matrix:
                include:
                    - php: '8.0'
                      mysql: '5.7'
                    - php: '8.1'
                      mysql: '8.0'
                group:
                  - 'address'
                  - 'basket'
                  - 'customer'
                  - 'order'
                  - 'other'
        needs: [ install_shop_with_module ]
        runs-on: ubuntu-latest
        steps:
            - name: Load current installation from cache
              uses: actions/cache@v2
              with:
                  path: |
                      ./*
                  key: shopInstallation-${{ matrix.php }}-${{ github.sha }}
                  restore-keys: |
                      shopInstallation-${{ matrix.php }}-${{ github.sha }}

            - name: Start containers
              run: |
                  make up
                  sleep 2

            - name: Install twig components
              run: |
                  docker-compose exec -T \
                    php composer require oxid-esales/flow-theme:dev-master --no-interaction --no-update
                  docker-compose exec -T \
                    php composer require oxid-esales/twig-component:dev-b-7.0.x --no-interaction --no-update
                  docker-compose exec -T \
                    php composer require oxid-esales/twig-theme:dev-b-7.0.x --no-interaction --no-update
                  docker-compose exec -T \
                    php composer require oxid-esales/twig-admin-theme:dev-b-7.0.x --no-interaction --no-update

            - name: Install codeception dependencies
              run: |
                  docker-compose exec -T \
                    php composer config repositories.oxid-esales/oxideshop-demodata-ce \
                    --json '{"type":"git", "url":"https://github.com/OXID-eSales/oxideshop_demodata_ce"}'
                  docker-compose exec -T php composer require oxid-esales/oxideshop-demodata-ce:dev-master --no-update
                  docker-compose exec -T php composer require codeception/c3 --dev --no-update
                  docker-compose exec -T php composer require codeception/module-rest:* --dev --no-update
                  docker-compose exec -T php composer require codeception/module-phpbrowser:* --dev --no-update
                  docker-compose exec -T php composer config --no-plugins allow-plugins.codeception/c3 true
                  docker-compose exec -T php composer update
                  sed -i 's/<?php/<?php\n\nrequire(__DIR__ . "\/..\/c3.php");/' source/source/bootstrap.php

            - name: Activate module
              run: |
                  docker-compose exec -T php bin/oe-console oe:setup:demodata
                  docker-compose exec -T php bin/oe-console oe:module:activate oe_graphql_base
                  docker-compose exec -T php bin/oe-console oe:module:activate oe_graphql_storefront

            - name: Run tests
              run: |
                  docker-compose exec -T \
                    -e SELENIUM_SERVER_HOST=selenium \
                    -e MODULE_IDS=oe_graphql_storefront \
                    -e XDEBUG_MODE=coverage \
                    php php vendor/bin/codecept run acceptance \
                      -c /var/www/vendor/oxid-esales/graphql-storefront/tests/codeception.yml -g ${{ matrix.group }}
