name: Schema

env:
  PHP: '8.0'

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Clone testing environment
        run: git clone https://github.com/OXID-eSales/docker-eshop-sdk.git .

      - name: Clone the shop
        run: git clone --depth 1 https://github.com/OXID-eSales/oxideshop_ce.git --branch b-7.0.x --single-branch source

      - name: Prepare container configuration
        run: |
          make setup
          make addbasicservices
          perl -pi\
            -e "s#PHP_VERSION=.*#PHP_VERSION='${{ env.PHP }}'#g;"\
            .env

          perl -pi\
            -e 's#display_errors =.*#display_errors = false#g;'\
            -e 'print "xdebug.max_nesting_level=1000\nxdebug.mode=coverage\n\n";'\
            -e 'print "error_reporting = E_ALL & ~E_DEPRECATED & ~E_NOTICE & ~E_WARNING\n"'\
            containers/php/custom.ini

          perl -pi\
            -e 's#/var/www/#/var/www/source/#g;'\
            containers/httpd/project.conf

      - name: Prepare shop configuration
        run: |
          cp source/source/config.inc.php.dist source/source/config.inc.php
          perl -pi\
            -e 'print "SetEnvIf Authorization \"(.*)\" HTTP_AUTHORIZATION=\$1\n\n" if $. == 1'\
            source/source/.htaccess

          perl -pi\
            -e 's#<dbHost>#mysql#g;'\
            -e 's#<dbUser>#root#g;'\
            -e 's#<dbName>#example#g;'\
            -e 's#<dbPwd>#root#g;'\
            -e 's#<dbPort>#3306#g;'\
            -e 's#<sShopURL>#http://localhost/#g;'\
            -e 's#<sShopDir>#/var/www/source/#g;'\
            -e 's#<sCompileDir>#/var/www/source/tmp/#g;'\
            source/source/config.inc.php

      - name: Start containers
        run: |
          make up
          sleep 2

      - name: Install dependencies
        run: docker-compose exec -T php composer update --no-interaction

      - name: Install module
        run: |
          docker-compose exec -T php composer require oxid-esales/graphql-storefront:dev-master --no-interaction

      - name: Reset shop
        run: |
          docker-compose exec -T \
            php bin/oe-console oe:database:reset --db-host=mysql --db-port=3306 \
            --db-name=example --db-user=root --db-password=root --force

      - name: Activate modules
        run: |
          docker-compose exec -T php php bin/oe-console oe:module:activate oe_graphql_base
          docker-compose exec -T php php bin/oe-console oe:module:activate oe_graphql_storefront

      - name: Generate documentation
        run: |
          sudo npm install -g @2fd/graphdoc
          sleep 2;
          TOKEN=$(curl --silent http://localhost/graphql?skipSession=1 -H 'Content-Type: application/json' --data-binary '{"query":"query {token(username: \"admin\", password:\"admin\")}"}' | sed -n 's|.*"token":"\(.*\)\"}}|\1|p')
          graphdoc -e http://localhost/graphql?skipSession=1 -o $GITHUB_WORKSPACE/docs/_static/schema -f -x "Authorization: Bearer $TOKEN"

      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: schema
          FOLDER: docs/_static/schema
