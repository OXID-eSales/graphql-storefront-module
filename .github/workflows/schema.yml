name: Schema

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: ['7.4']

    steps:
      - name: Clone testing environment
        run: git clone https://github.com/OXID-eSales/docker-eshop-sdk.git .

      - name: Clone the shop
        run: git clone --depth 1 https://github.com/OXID-eSales/oxideshop_ce.git --branch master --single-branch source

      - name: Prepare container configuration
        run: |
          make setup
          make addbasicservices
          sed "s/PHP_VERSION=.*/PHP_VERSION='${{ matrix.php }}'/" -i .env
          sed "s/display_errors =.*/display_errors = false/" -i containers/php-fpm/custom.ini
          sed -i -e "s+/var/www/+/var/www/source/+" containers/httpd/project.conf
          sed -i "1s+^+xdebug.max_nesting_level=1000\nxdebug.mode=coverage\n\n+" containers/php-fpm/custom.ini

      - name: Prepare shop configuration
        run: |
          cp source/source/config.inc.php.dist source/source/config.inc.php
          sed -i "1s+^+SetEnvIf Authorization "\(.*\)" HTTP_AUTHORIZATION=\$1\n\n+" source/source/.htaccess
          sed -i -e 's/<dbHost>/mysql/'\
                 -e 's/<dbUser>/root/'\
                 -e 's/<dbName>/example/'\
                 -e 's/<dbPwd>/root/'\
                 -e 's/<dbPort>/3306/'\
                 -e 's/<sShopURL>/http:\/\/localhost.local\//'\
                 -e 's/<sShopDir>/\/var\/www\/source\//'\
                 -e 's/<sCompileDir>/\/var\/www\/source\/tmp\//'\
              source/source/config.inc.php

      - name: Start containers
        run: |
          make up
          sleep 2

      - name: Install dependencies
        run: docker-compose exec -T php composer update --no-interaction

      - name: Install module
        run: |
          docker-compose exec -T php composer require oxid-esales/graphql-storefront:dev-master --no-interaction

      - name: Reset shop
        run: docker-compose exec -T php php vendor/bin/reset-shop

      - name: Activate modules
        run: |
          docker-compose exec -T php php bin/oe-console oe:module:activate oe_graphql_base
          docker-compose exec -T php php bin/oe-console oe:module:activate oe_graphql_storefront

      - name: Generate documentation
        run: |
          sudo npm install -g @2fd/graphdoc
          sleep 2;
          TOKEN=$(curl --silent http://localhost/graphql?skipSession=1 -H 'Content-Type: application/json' --data-binary '{"query":"query {token(username: \"admin\", password:\"admin\")}"}' | sed -n 's|.*"token":"\(.*\)\"}}|\1|p')
          graphdoc -e http://localhost/graphql?skipSession=1 -o $GITHUB_WORKSPACE/docs/_static/schema -f -x "Authorization: Bearer $TOKEN"

      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: schema
          FOLDER: docs/_static/schema
